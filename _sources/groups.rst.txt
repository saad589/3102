Groups
======

.. csv table (its a comment ) 

1. 17-1-23 (discrete)

.. csv-table::
   :header: "Group 1", "Group 2", "Group 3", "Group 4", "Group 5", "Group 6"

   "2", "8", "12", "9", "18", "23"
   "3", "11", "17", "10", "21", "24"
   "5", "14", "", "19", "22", "25"   
   "6", "", "", "", "", ""

2. 25-1-23 (nand)

.. csv-table::
   :header: "Group 1", "Group 2", "Group 3", "Group 4", "Group 5"

   "25", "9", "19", "18", "12"
   "14", "23", "24", "22", "5"
   "6", "10", "4", "21", "11"  
   "8", "17", "3", "2", ""

3. 1-2-23 (ex-or)

.. csv-table::
   :header: "Group 1", "Group 2", "Group 3", "Group 4", "Group 5"

   "21", "14", "4", "6", "5"
   "10", "18", "23", "24", "22"
   "17", "8", "2", "12", "3"
   "25", "11", "9", "19", ""

4. 15-2-23 (k-map)

.. csv-table::
   :header: "Group 1", "Group 2", "Group 3", "Group 4", "Group 5"

   "5", "25", "10", "6", "23"
   "14", "18", "21", "24", "2"
   "11", "4", "9", "12", "8"
   "17", "22", "3", "19", ""

5. 22-2-23 and 1-3-23 (ff & shift register)

.. csv-table::
   :header: "Group 1", "Group 2", "Group 3", "Group 4", "Group 5"

   "18", "12", "17", "25", "5"
   "21", "22", "4", "2", "19"
   "10", "6", "8", "23", "9"
   "3", "14", "24", "11", ""

6. 22-3-23 (adder)

.. csv-table::
   :header: "Group 1", "Group 2", "Group 3", "Group 4", "Group 5"

   "17", "6", "12", "14", "3"
   "21", "10", "25", "23", "9"
   "8", "22", "19", "24", "2"
   "5", "4", "11", "18", ""

7. 3-5-23 (8086)

.. csv-table::
   :header: "Group 1", "Group 2", "Group 3", "Group 4", "Group 5"

   "9", "25", "6", "8", "23"
   "22", "5", "12", "10", "11"
   "3", "17", "24", "2", "14"
   "18", "19", "21", "4", ""

8. TBD 

.. csv-table::
   :header: "Group 1", "Group 2", "Group 3", "Group 4", "Group 5"

   "18", "12", "21", "17", "11"
   "24", "6", "22", "5", "10"
   "2", "3", "14", "8", "23"
   "25", "9", "19", "4", ""

9. TBD 

.. csv-table::
   :header: "Group 1", "Group 2", "Group 3", "Group 4", "Group 5"

   "6", "11", "25", "10", "8"
   "24", "18", "2", "21", "9"
   "14", "5", "3", "4", "23"
   "19", "22", "12", "17", ""  

10. TBD 

.. csv-table::
   :header: "Group 1", "Group 2", "Group 3", "Group 4", "Group 5"

   "19", "10", "21", "4", "22"
   "6", "14", "18", "5", "23"
   "9", "25", "2", "24", "8"
   "11", "17", "3", "12", ""

11. TBD 

.. csv-table::
   :header: "Group 1", "Group 2", "Group 3", "Group 4", "Group 5"

   "14", "4", "5", "6", "12"
   "10", "2", "11", "9", "3"
   "18", "22", "8", "21", "23"
   "17", "24", "19", "25", ""

12. TBD

.. csv-table::
   :header: "Group 1", "Group 2", "Group 3", "Group 4", "Group 5"

   "2", "23", "10", "21", "8"
   "11", "6", "14", "19", "4"
   "24", "25", "22", "18", "9"
   "17", "3", "12", "5", ""

13. TBD

.. csv-table::
   :header: "Group 1", "Group 2", "Group 3", "Group 4", "Group 5"

   "10", "22", "25", "11", "18"
   "24", "14", "19", "9", "6"
   "23", "21", "2", "5", "17"
   "12", "3", "8", "4", ""

14. TBD

.. csv-table::
   :header: "Group 1", "Group 2", "Group 3", "Group 4", "Group 5"

   "9", "4", "21", "6", "8"
   "3", "5", "25", "11", "19"
   "2", "22", "17", "18", "12"
   "10", "14", "23", "24", ""
      
The follwing is the group tables ruberic; ``randperm()`` uses Mersenne Twister[2].

..  code-block:: matlab

    load roll; 
    roll_rand = shuffle(roll);
    fprintf(".. csv-table::\n");
    fprintf("   :header: ""Group 1"", ""Group 2"", ""Group 3"", ""Group 4"", ""Group 5""\n");
    fprintf("\n");
    fprintf("   ""%d"", ""%d"", ""%d"", ""%d"", ""%d""\n",roll_rand(1:5));
    fprintf("   ""%d"", ""%d"", ""%d"", ""%d"", ""%d""\n",roll_rand(6:10));
    fprintf("   ""%d"", ""%d"", ""%d"", ""%d"", ""%d""\n",roll_rand(11:15));
    fprintf("   ""%d"", ""%d"", ""%d"", ""%d"", """"\n",roll_rand(16:end));
    fprintf("\n");
    function v=shuffle(v)
        v=v(randperm(length(v)));
    end